
import streamlit as st
import pandas as pd
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# Configuraci√≥n de p√°gina
st.set_page_config(page_title="Tu Caf√© Ideal", layout="centered")
st.title("‚òï El Mundo del Caf√©")
st.subheader("Recomendaci√≥n personalizada de caf√©")

# Autenticaci√≥n Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
import os
import json

# Leer el secreto como diccionario
creds_json = os.environ["GOOGLE_CREDENTIALS"]
creds_dict = json.loads(creds_json)
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

# Leer respuestas desde Google Sheets
SHEET_URL = "https://docs.google.com/spreadsheets/d/1q0zbnahDvJ9M3WBpLOkqaLkM7VXDfBh8ZW9923MfEg4/edit#gid=0"
worksheet = client.open_by_url(SHEET_URL).sheet1
data = worksheet.get_all_records()
user_df = pd.DataFrame(data)

# Leer √∫ltimo perfil
last_user = user_df.iloc[-1]
user_profile = {
    "gustos": last_user["1. ¬øQu√© sabores disfrutas m√°s en alimentos o bebidas?(Puedes elegir m√°s de uno)"].lower().split(", "),
    "intensidad": last_user["3. ¬øQu√© intensidad de sabor prefieres?"].lower(),
    "acidez": last_user["4. ¬øQu√© nivel de acidez te resulta m√°s agradable?"].lower(),
    "cuerpo": last_user["5. ¬øQu√© tipo de cuerpo prefieres en un caf√©?"].lower(),
    "valores": last_user["6. ¬øQu√© atributos valoras m√°s al comprar caf√©?"].lower().split(", ")
}

# Mostrar perfil
st.markdown("### Tu perfil sensorial:")
st.markdown(f"- **Sabores**: {', '.join(user_profile['gustos'])}")
st.markdown(f"- **Intensidad**: {user_profile['intensidad'].capitalize()}")
st.markdown(f"- **Acidez**: {user_profile['acidez'].capitalize()}")
st.markdown(f"- **Cuerpo**: {user_profile['cuerpo'].capitalize()}")
st.markdown(f"- **Valores √©ticos**: {', '.join(user_profile['valores'])}")

# Leer caf√©s desde Drive
cafes_df = pd.read_csv("cafes_shopify_export.csv")
cafes_df["Descripci√≥n"] = cafes_df["Descripci√≥n"].fillna("")
cafes_df["Tags"] = cafes_df["Tags"].fillna("")

# Algoritmo de recomendaci√≥n
def recomendar_cafe(user, cafes_df):
    def puntuar(fila):
        score = 0
        texto = fila["Descripci√≥n"].lower() + " " + fila["Tags"].lower()
        if any(g in texto for g in user["gustos"]):
            score += 1
        if user["intensidad"] in texto:
            score += 1
        if user["acidez"] in texto:
            score += 1
        if user["cuerpo"] in texto:
            score += 1
        if any(v in texto for v in user["valores"]):
            score += 1
        return score

    cafes_df["Puntaje"] = cafes_df.apply(puntuar, axis=1)
    return cafes_df.sort_values("Puntaje", ascending=False).head(3)

# Resultado
st.markdown("### ‚òï Recomendaci√≥n:")
recomendados = recomendar_cafe(user_profile, cafes_df)

for i, row in recomendados.iterrows():
    st.markdown(f"**{row['Nombre del Caf√©']}**")
    st.markdown(f"- {row['Descripci√≥n'][:150]}...")
    st.markdown(f"- üí∞ Precio: ${row['Precio']}")
    st.markdown("---")
